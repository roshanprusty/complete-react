{"ast":null,"code":"var _jsxFileName = \"D:\\\\language\\\\React\\\\REACT\\\\React1\\\\3-react-effects-reducers-context\\\\src\\\\components\\\\Login\\\\Login.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useReducer, useContext, useRef } from 'react';\nimport Card from '../UI/Card/Card';\nimport classes from './Login.module.css';\nimport Button from '../UI/Button/Button';\nimport AuthContext from '../Context/AuthContext';\nimport Input from '../Input/input';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction emailReducer(state, action) {\n  switch (action.type) {\n    case 'EMAIL_INPUT':\n      return {\n        value: action.val,\n        isValid: undefined\n      };\n    case 'EMAIL_VALID':\n      return {\n        value: state.value,\n        isValid: state.value.includes('@')\n      };\n  }\n}\nfunction passwordReducer(state, action) {\n  switch (action.type) {\n    case 'PSWD_INPUT':\n      return {\n        value: action.val,\n        isValid: undefined\n      };\n    case 'PSWD_VALID':\n      return {\n        value: state.value,\n        isValid: state.value.trim().length > 6\n      };\n  }\n}\nconst Login = props => {\n  _s();\n  // const [enteredEmail, setEnteredEmail] = useState('');\n  // const [emailIsValid, setEmailIsValid] = useState();\n  const [enteredPassword, setEnteredPassword] = useState('');\n  const [passwordIsValid, setPasswordIsValid] = useState();\n  const [formIsValid, setFormIsValid] = useState(false);\n  let [emailState, emailDispatcher] = useReducer(emailReducer, {\n    value: '',\n    isValid: undefined\n  });\n  let [passwordState, pswdDispatcher] = useReducer(passwordReducer, {\n    value: '',\n    isValid: null\n  });\n  let authctx = useContext(AuthContext);\n  let emailRef = useRef();\n  let pswdRef = useRef();\n  useEffect(() => {\n    let value = setTimeout(() => {\n      console.log('validating form input...');\n      setFormIsValid(emailState.value.includes('@') && passwordState.value.trim().length > 6);\n    }, 500);\n    return () => {\n      console.log('Cleanup function executed');\n      clearTimeout(value);\n    };\n  }, [emailState.isValid, passwordState.isValid]);\n  const emailChangeHandler = event => {\n    //setEnteredEmail(event.target.value);\n    emailDispatcher({\n      val: event.target.value,\n      type: 'EMAIL_INPUT'\n    });\n  };\n  const passwordChangeHandler = event => {\n    //setEnteredPassword(event.target.value);\n    pswdDispatcher({\n      val: event.target.value,\n      type: 'PSWD_INPUT'\n    });\n  };\n  const validateEmailHandler = () => {\n    //setEmailIsValid(emailState.value.includes('@'));\n    emailDispatcher({\n      val: emailState.value,\n      type: 'EMAIL_VALID'\n    });\n  };\n  const validatePasswordHandler = () => {\n    //setPasswordIsValid(passwordState.value.trim().length > 6);\n    pswdDispatcher({\n      val: passwordState.value,\n      type: 'PSWD_VALID'\n    });\n  };\n  const submitHandler = event => {\n    event.preventDefault();\n    if (formIsValid) {\n      authctx.onLogin(emailState.value, passwordState.value);\n    } else if (!emailState.isValid) {\n      emailRef.current.onfocus();\n    } else {\n      pswdRef.current.onfocus();\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(Card, {\n    className: classes.login,\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: submitHandler,\n      children: [/*#__PURE__*/_jsxDEV(Input, {\n        ref: emailRef,\n        type: \"email\",\n        id: \"email\",\n        value: emailState.value,\n        isValid: emailState.isValid,\n        onChangeHandler: emailChangeHandler,\n        onBlurHandler: validateEmailHandler,\n        children: \" E-mail\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Input, {\n        ref: pswdRef,\n        type: \"password\",\n        id: \"pswd\",\n        value: passwordState.value,\n        isValid: passwordState.isValid,\n        onChangeHandler: passwordChangeHandler,\n        onBlurHandler: validatePasswordHandler,\n        children: \" Password\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.actions,\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          type: \"submit\",\n          className: classes.btn,\n          children: \"Login\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 92,\n    columnNumber: 5\n  }, this);\n};\n_s(Login, \"fxiAVXRhnse+S/8JycXnEFXjavM=\");\n_c = Login;\nexport default Login;\nvar _c;\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"names":["React","useState","useEffect","useReducer","useContext","useRef","Card","classes","Button","AuthContext","Input","jsxDEV","_jsxDEV","emailReducer","state","action","type","value","val","isValid","undefined","includes","passwordReducer","trim","length","Login","props","_s","enteredPassword","setEnteredPassword","passwordIsValid","setPasswordIsValid","formIsValid","setFormIsValid","emailState","emailDispatcher","passwordState","pswdDispatcher","authctx","emailRef","pswdRef","setTimeout","console","log","clearTimeout","emailChangeHandler","event","target","passwordChangeHandler","validateEmailHandler","validatePasswordHandler","submitHandler","preventDefault","onLogin","current","onfocus","className","login","children","onSubmit","ref","id","onChangeHandler","onBlurHandler","fileName","_jsxFileName","lineNumber","columnNumber","actions","btn","_c","$RefreshReg$"],"sources":["D:/language/React/REACT/React1/3-react-effects-reducers-context/src/components/Login/Login.js"],"sourcesContent":["import React, { useState, useEffect, useReducer, useContext, useRef} from 'react';\n\nimport Card from '../UI/Card/Card';\nimport classes from './Login.module.css';\nimport Button from '../UI/Button/Button';\nimport AuthContext from '../Context/AuthContext';\nimport Input from '../Input/input';\n\nfunction emailReducer(state, action){\n  switch(action.type){\n    case 'EMAIL_INPUT':\n      return {value: action.val, isValid: undefined};\n    case 'EMAIL_VALID':\n      return {value: state.value, isValid: state.value.includes('@')}\n  }\n}\n\nfunction passwordReducer(state, action){\n  switch(action.type){\n    case 'PSWD_INPUT':\n      return {value: action.val, isValid: undefined};\n    case 'PSWD_VALID':\n      return {value: state.value, isValid: state.value.trim().length > 6}\n  }\n}\n\n\n\nconst Login = (props) => {\n  // const [enteredEmail, setEnteredEmail] = useState('');\n  // const [emailIsValid, setEmailIsValid] = useState();\n  const [enteredPassword, setEnteredPassword] = useState('');\n  const [passwordIsValid, setPasswordIsValid] = useState();\n  const [formIsValid, setFormIsValid] = useState(false);\n\n  let[emailState, emailDispatcher] = useReducer(emailReducer, {value: '', isValid: undefined});\n  let[passwordState, pswdDispatcher] = useReducer(passwordReducer, {value: '', isValid: null})\n\n  let authctx = useContext(AuthContext)\n\n  let emailRef = useRef();\n  let pswdRef = useRef();\n\n\n  useEffect(() => {\n    let value = setTimeout(() => {\n      console.log('validating form input...')\n      setFormIsValid(\n        emailState.value.includes('@') && passwordState.value.trim().length > 6\n      );\n    }, 500);\n\n    return () => {\n      console.log('Cleanup function executed');\n      clearTimeout(value);\n    }\n    \n  }, [emailState.isValid, passwordState.isValid]);\n\n  const emailChangeHandler = (event) => {\n    //setEnteredEmail(event.target.value);\n    emailDispatcher({val: event.target.value, type: 'EMAIL_INPUT'})\n  };\n\n  const passwordChangeHandler = (event) => {\n    //setEnteredPassword(event.target.value);\n    pswdDispatcher({val: event.target.value, type: 'PSWD_INPUT'})\n  };\n\n  const validateEmailHandler = () => {\n    //setEmailIsValid(emailState.value.includes('@'));\n    emailDispatcher({val: emailState.value, type: 'EMAIL_VALID'})\n  };\n\n  const validatePasswordHandler = () => {\n    //setPasswordIsValid(passwordState.value.trim().length > 6);\n    pswdDispatcher({val: passwordState.value, type: 'PSWD_VALID'});\n  };\n\n  const submitHandler = (event) => {\n    event.preventDefault();\n    if(formIsValid){\n      authctx.onLogin(emailState.value, passwordState.value);\n    } else if(!emailState.isValid){\n        emailRef.current.onfocus();\n    } else {\n        pswdRef.current.onfocus();\n    }\n  };\n\n  return (\n    <Card className={classes.login}>\n      <form onSubmit={submitHandler}>\n        <Input \n          ref={emailRef}\n          type=\"email\" \n          id=\"email\" \n          value={emailState.value} \n          isValid={emailState.isValid}\n          onChangeHandler={emailChangeHandler} \n          onBlurHandler={validateEmailHandler}> E-mail\n        </Input>\n        <Input \n          ref={pswdRef}\n          type=\"password\" \n          id=\"pswd\" \n          value={passwordState.value} \n          isValid={passwordState.isValid}\n          onChangeHandler={passwordChangeHandler} \n          onBlurHandler={validatePasswordHandler}> Password\n        </Input>\n        <div className={classes.actions}>\n          <Button type=\"submit\" className={classes.btn}>\n            Login\n          </Button>\n        </div>\n      </form>\n    </Card>\n  );\n};\n\nexport default Login;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}